(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{512:function(t,e,r){"use strict";r.r(e);var s=r(6),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"git可视化操作工具-sourcetree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git可视化操作工具-sourcetree"}},[t._v("#")]),t._v(" git可视化操作工具---SourceTree")]),t._v(" "),r("p",[t._v("想必大家都体会过被git命令支配的恐惧吧，这里向大家推荐一款我平时一直在用的git可视化工具SourceTree，以及我平时的操作流程。")]),t._v(" "),r("p",[t._v("附上sourceTree的官方网址："),r("a",{attrs:{href:"https://www.sourcetreeapp.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.sourcetreeapp.com/"),r("OutboundLink")],1)]),t._v(" "),r("h3",{attrs:{id:"克隆仓库-git-clone"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#克隆仓库-git-clone"}},[t._v("#")]),t._v(" 克隆仓库（git clone）")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/克隆仓库.png"),alt:""}}),t._v(" "),r("p",[t._v("点击新建-从url克隆，输入你的远程仓库的git地址，选择你要存放的文件夹位置；随后你的列表中就会多出一条仓库记录，等进度条加载完成之后，就说明克隆完毕；")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/从Url克隆.png"),alt:""}}),t._v(" "),r("p",[t._v("克隆完成之后，他会自动打开仓库详情，如果没有，请自行双击打开。")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/list.png"),alt:""}}),t._v(" "),r("h3",{attrs:{id:"仓库详情"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#仓库详情"}},[t._v("#")]),t._v(" 仓库详情")]),t._v(" "),r("p",[t._v("如下图所示，整个仓库的情况可以很清晰的展现在你的面前：")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/仓库详情.png"),alt:""}}),t._v(" "),r("p",[t._v("文件状态：当你修改了文件，有变更的文件就会在这里展示出来，比如这里我修改了test.txt，选中test.txt，可以在右侧看到我在文件中新增了一行，并写上了change")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/文件状态.png"),alt:""}}),t._v(" "),r("p",[t._v("历史：以时间轴的情况，展示出该仓库的所有分支提交情况，以及提交备注。可以在这里筛选分支，以便更清楚的管理分支。")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/历史.png"),alt:""}}),t._v(" "),r("p",[t._v("搜索：搜索代码提交备注，如果你有良好的提交批注习惯，这个功能将能很好的帮助你查找到以前修改功能的代码提交记录")]),t._v(" "),r("p",[t._v("分支：这里用于展示你所有的本地分支")]),t._v(" "),r("p",[t._v("标签：这里用于展示你所有的本地分支标签")]),t._v(" "),r("p",[t._v("远端：这里用于展示远端仓库中的所有分支")]),t._v(" "),r("p",[t._v("已贮藏：这里用于展示你贮藏的代码，不明白的朋友谨慎使用，我之前使用一次差点炸了")]),t._v(" "),r("p",[t._v("子模块、子树：未使用过，有兴趣的朋友自行了解")]),t._v(" "),r("h3",{attrs:{id:"常用流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常用流程"}},[t._v("#")]),t._v(" 常用流程")]),t._v(" "),r("p",[t._v("接下来说说我平时工作中使用的基本流程，这一套流程一般在日常coding中够用了。")]),t._v(" "),r("p",[t._v("当你写完一个功能模块后，准备提交代码；")]),t._v(" "),r("p",[t._v("先来到文件状态，将未暂存文件区域中的文件勾选上，勾选的文件自行根据判断；勾选之后，将会自动进入到已暂存文件区域，这里对应的git命令为git add xxx；")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/git_add.png"),alt:""}}),t._v(" "),r("p",[t._v("暂存之后，点击工具栏上的拉取按钮，点击刷新，选择你当前的分支进行拉取。目的是先拉取远程分支上的代码，以防提交之后造成远程仓库中的代码冲突；这里对应的git命令为git pull；")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/git_pull.png"),alt:""}}),t._v(" "),r("p",[t._v('拉取之后，点击最下方的输入框，填写你本次提交的批注；填写之后勾选下方立即推送变更到origin/xxx选项，然后点击提交按钮；这里对应的git命令依次为git commit -m "你填写的内容"、git push；')]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/git_push.png"),alt:""}}),t._v(" "),r("p",[t._v("以上，如果没有遇见冲突的话，那么你的代码就成功推送到远程仓库了，是不是很简单？")]),t._v(" "),r("h3",{attrs:{id:"处理冲突"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#处理冲突"}},[t._v("#")]),t._v(" 处理冲突")]),t._v(" "),r("p",[t._v("接下来我们讲讲如果遇到冲突应该怎么做。")]),t._v(" "),r("p",[t._v("如下图，我们将修改的文件暂存之后，在拉取代码的时候出现了报错，意思是test.txt这个文件存在冲突，估计是别人也改了这个文件，并且抢先一步提交了上去，这时候我们不用急，先把当前暂存的文件提交了，注意⚠️这里仅仅只是提交，把左下角的立即推送变更的选项去掉，然后点提交！这样做的原因是先把我们写的代码提交到本地的版本库中，避免我们的代码被覆盖了。")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/conflict.png"),alt:""}}),t._v(" "),r("p",[t._v("提交之后确保已暂存文件区域清空之后再进行拉取。拉取之后，他就会告诉你有文件冲突了，冲突的文件会有一个橙色感叹号。这时候我们进入vscode打开这个冲突文件，如下图，<<<< Head就是你当前本地版本库的代码，也就是你自己写的代码。下面蓝色那部分就是远程仓库拉取下来的代码，也就是别人的代码。这里需要根据你们两人的商量来考虑怎么处理冲突，如果对方的代码没用，你可以直接点击Accept Current Change（使用当前版本）将这段冲突代码全部使用自己的代码；如果是自己的代码没用，就点击Accept Incoming Change（使用引入版本）将这段冲突全部替换成他人的代码；如果是两个人的代码都要保留，就点击Accept Both Change（保留双方更改）。最后一个选项就是代码量过多的时候，可以点击比较版本，来清楚的看清究竟哪里冲突了。")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/冲突.png"),alt:""}}),t._v(" "),r("p",[t._v("解决冲突之后，我们再将未暂存文件区域中的冲突文件选中，这时候你会发现橙色感叹号消失了，就代表冲突解决了。")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/解决冲突.png"),alt:""}}),t._v(" "),r("p",[t._v("全部解决之后，点击下方的输入框，可以看到他自动生成了一段commit信息，你可以修改也可以不修改，然后选中立即推送变更，点击提交。以上，冲突完美解决。就这么简单。")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/sourceTree/冲突提交.png"),alt:""}})])}),[],!1,null,null,null);e.default=a.exports}}]);